from typing import Optional, List

from typing_extensions import Tuple

class Regex(object):
    ...

    def is_match(self, other: str) -> bool: ...

    def is_match_at(self, other: str, start: int) -> bool: ...

    def find(self, other: str) -> Optional[str]: ...

    def findall(self, other: str) -> List[str]: ...

    def all_captures(self, other: str) -> List[List[Optional[str]]]: ...

    def captures(self, other: str) -> Optional[List[Optional[str]]]: ...

    def matches(self, other: str) -> List[Tuple[int, int]]: ...


class RegexSet(object):
    ...

    def is_match(self, other: str) -> bool: ...

    def find(self, other: str) -> List[int]: ...
